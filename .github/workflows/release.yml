name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.2'  # Set your Go version

      - name: Build for ${{ matrix.os }}
        run: |
          if [[ $RUNNER_OS == 'Windows' ]]; then
            GOOS=windows GOARCH=amd64 go build -o myapp.exe
          elif [[ $RUNNER_OS == 'macOS' ]]; then
            GOOS=darwin GOARCH=amd64 go build -o myapp-mac
          else
            GOOS=linux GOARCH=amd64 go build -o myapp-linux
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: myapp-${{ matrix.os }}
          path: |
            myapp.exe
            myapp-mac
            myapp-linux

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: myapp-${{ matrix.os }}
          path: ./artifacts

      - name: Set release version
        id: vars
        run: echo "RELEASE_VERSION=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/myapp.exe
          asset_name: myapp.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset macOS
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/myapp-mac
          asset_name: myapp-mac
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/myapp-linux
          asset_name: myapp-linux
          asset_content_type: application/octet-stream
